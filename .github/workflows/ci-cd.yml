name: fe-traderhub CI/CD

on:
  pull_request:
    branches:
      - 'dev/**'
  create:
    tags: [ "v*" ]

jobs:
  ci:
    name: CI - Test, Lint, Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '12.16.1'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Unit tests
        run: yarn test

      - name: Build
        run: yarn build

      - name: Docker build (CI check)
        run: |
          docker build \
            --target builder \
            --build-arg NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} \
            --build-arg NEXT_PUBLIC_NODE_ENV=${{ secrets.NEXT_PUBLIC_NODE_ENV }} \
            -t nextjs-ci-check .

  cd-staging:
    name: CD - Staging Deploy
    if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-')
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '12.16.1'

      - name: Docker build (staging)
        run: |
          docker build \
            --build-arg NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL_STAGING }} \
            --build-arg NEXT_PUBLIC_NODE_ENV=staging \
            -t khoapham/traderhub:${{ github.ref_name }} .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: |
          docker push khoapham/traderhub:${{ github.ref_name }}

      - name: Deploy to Staging Server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.STAGING_SERVER_HOST }}
          username: ${{ secrets.STAGING_SERVER_USER }}
          key: ${{ secrets.STAGING_SERVER_SSH_KEY }}
          script: |
            docker pull khoapham/traderhub:${{ github.ref_name }}
            docker stop traderhub-staging || true
            docker rm traderhub-staging || true
            docker run -d --name traderhub-staging -p 3000:3000 \
              -e NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL_STAGING }} \
              -e NEXT_PUBLIC_NODE_ENV=staging \
              khoapham/traderhub:${{ github.ref_name }}

  cd-production:
    name: CD - Production Deploy
    if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-')
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '12.16.1'

      - name: Docker build (production)
        run: |
          docker build \
            --build-arg NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL_PROD }} \
            --build-arg NEXT_PUBLIC_NODE_ENV=production \
            -t khoapham/traderhub:${{ github.ref_name }} .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: |
          docker push khoapham/traderhub:${{ github.ref_name }}

      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.PROD_SERVER_HOST }}
          username: ${{ secrets.PROD_SERVER_USER }}
          key: ${{ secrets.PROD_SERVER_SSH_KEY }}
          script: |
            docker pull khoapham/traderhub:${{ github.ref_name }}
            docker stop traderhub-prod || true
            docker rm traderhub-prod || true
            docker run -d --name traderhub-prod -p 3000:3000 \
              -e NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL_PROD }} \
              -e NEXT_PUBLIC_NODE_ENV=production \
              khoapham/traderhub:${{ github.ref_name }}